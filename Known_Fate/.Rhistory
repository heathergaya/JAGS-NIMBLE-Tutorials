knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width = 12, collapse = TRUE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
library(coda)
library(runjags)
library(knitr)
library(nimble)
library(ggplot2)
library(tidyr)
#making up some data that roughly resembles the true data
set.seed(20)
Sow = sample(1:24, 100, replace = T)
Sow_mass = rnorm(24, 982, 100)
sexF = rbinom(100, 1, .4)
years = c(2017,2019,2018,2019,
2018,2018,2017,2018,
2017,2017,2018,2019,
2017,2019,2018,2019,
2018,2018,2017,2018,
2017,2017,2018,2019)
Ind.mass = rnorm(100, 300, 50)
In.Date = c("2017-09-27", "2019-12-25", "2018-10-01", "2019-04-09",
"2018-05-03", "2018-05-20", "2017-08-01", "2018-09-15",
"2017-04-20", "2017-06-03", "2018-01-04", "2019-07-18",
"2017-02-27", "2019-12-25", "2018-10-21", "2019-02-09",
"2018-03-03", "2018-02-20", "2017-09-12", "2018-02-15",
"2017-01-20", "2017-08-03", "2018-05-04", "2019-04-18")
col = sample(c("spotted", "notspotted"), 100, replace = T)
fake.data = data.frame(ID = NA, Sow= Sow, Sow_mass = Sow_mass[Sow], sex = sexF, color = col, year = years[Sow], mass = Ind.mass, In.Date = In.Date[Sow], Out.Date = NA)
fake.data <- fake.data[order(fake.data$In.Date, fake.data$Sow),]
fake.data$ID = 1:100
##make up some fake survival relationships
ran_sow <- runif(24, -1, 7)
surv.prob <- matrix(NA, nrow = 100, ncol = 42)
for(t in 2:42){
surv.prob[,t] = plogis(.8 + .15*fake.data$sex -.19*(as.numeric(fake.data$color)-1) + .85*ran_sow[fake.data$Sow]+.05*t)
}
z <- matrix(NA, nrow= 100, ncol = 42)
last.day <- censor <- array(NA)
z[,1] <- 1
for(i in 1:100){
for(t in 2:42){
z[i,t] <- rbinom(1,z[i,t-1],surv.prob[i,t])
}
last.day[i] <- ifelse(z[i,42] == 1, 42, which(z[i,] == 0)[1])
censor[i] <- ifelse(z[i,42] == 1, 1, 0) # 1= censor, 0 = died
}
fake.data$Out.Date = as.Date(fake.data$In.Date)+ last.day
fake.data$censor = censor
fake.data$sex <- ifelse(fake.data$sex == 1, "F", "M")
#write.csv(fake.data, file = "pig_survival.csv")
neos <- read.csv("pig_survival.csv", stringsAsFactors = F)
head(neos, n = 2)
neos$In.Date <- as.Date(neos$In.Date, format = "%Y-%m-%d")
neos$Out.Date <- as.Date(neos$Out.Date, format = "%Y-%m-%d")
cap.dates <- sort(unique(c(neos$In.Date, neos$Out.Date)))
cap.dates <- seq(cap.dates[1],cap.dates[length(cap.dates)], by = 1)
occs <- length(cap.dates)
first <- last <- array(NA, dim = nrow(neos)) #first and last day we saw each bubs
surv.caps <-  matrix(data = NA, nrow = nrow(neos), ncol = occs) #cap.history
for(i in 1:nrow(neos)){ #for each individual
first[i] <- which(cap.dates == neos$In.Date[i]) #first seen
last[i] <- which(cap.dates == neos$Out.Date[i]) #last seen
surv.caps[i,first[i]:last[i]] <- 1 #it was alive for its lifetime obviously
if(neos$censor[i] == 0)# unless it died
{surv.caps[i,last[i]] <- 0}
#if it died, it should be dead at the last occasion that we saw it
}
neos[1,]
surv.caps[1,1:10]
neos$Sow_mass_s <- (neos$Sow_mass - mean(neos$Sow_mass)) / sd(neos$Sow_mass)
neos$mass_s <- (neos$mass - mean(neos$mass)) / sd(neos$mass)
#could also use the scale function
neos$color <- as.numeric(as.factor(neos$color))
neos$sex <- as.numeric(as.factor(neos$sex))
neos$Sow_numeric <- as.numeric(as.factor(neos$Sow))
piggies.all <- nimbleCode({
#sow effects
sigmaSow ~ dunif(0, 2)
for(k in 1:n.sow){
beta.Sow[k] ~ dnorm(0, sd = sigmaSow)
}
#sex effects
beta.sex[1] ~ dnorm(0, sd = .5) #female
beta.sex[2] ~ dnorm(0, sd= .5) #male
sigmayear ~ dunif(0, 2)		# Random effect SD
for(t in 1:n.years){
beta.year[t] ~ dnorm(0, sd = sigmayear)
}
for (i in 1:n.ind){
for(t in (first[i]+1):last[i]){
logit(phi[i,t]) <- beta0 + beta.Sow[sow[i]]*on[1] +
beta.age*(t-first[i])*on[2] + beta.sex[sex[i]]*on[3] +
beta.year[year[i]]*on[4] +
beta.mass*mass[i]*on[5]
mu[i,t] <- phi[i,t]*y[i,t-1]
y[i,t] ~dbern(mu[i,t])
}
}
beta0 ~ dunif(-6,6)
beta.age ~ dnorm(0,sd =.25) #constrain to avoid difficulties with convergence
beta.mass ~ dnorm(0,sd = .25) #constrain to avoid difficulties with convergence
})
n.params <- c("beta0", "beta.Sow","beta.age", "beta.sex", "beta.year", "beta.mass")
n.constants <- list(n.ind= nrow(neos), first = first,
last = last, sow = neos$Sow_numeric,
n.sow = n.sow, mass= neos$mass_s,
year = neos$year-2016,
sex = neos$sex, n.years = 3)
n.sow = length(unique(neos$Sow))
n.params <- c("beta0", "beta.Sow","beta.age", "beta.sex", "beta.year", "beta.mass")
n.constants <- list(n.ind= nrow(neos), first = first,
last = last, sow = neos$Sow_numeric,
n.sow = n.sow, mass= neos$mass_s,
year = neos$year-2016,
sex = neos$sex, n.years = 3)
n.data <- list(y = surv.caps, on = c(0,0,0,0,0))
n.inits <- list(beta0 = runif(1), beta.age = runif(1), beta.mass = runif(1),
beta.Sow = runif(n.sow), beta.sex = runif(2), sigmayear = runif(1),
sigmaSow = runif(1))
preppigs <- nimbleModel(code = piggies.all,
constants = n.constants,
data = n.data,
inits = n.inits)
preppigs$initializeInfo()
preppigs$simulate("beta.year")
preppigs$calculate("phi")
preppigs$calculate("mu")
mcmcpigs <- configureMCMC(preppigs, monitors = n.params, print = T, enableWAIC = T)
pigsMCMC <- buildMCMC(mcmcpigs)
